<?php// +----------------------------------------------------------------------// | VitPHP// +----------------------------------------------------------------------// | 版权所有 2018~2021 藁城区创新网络电子商务中心 [ http://www.vitphp.cn ]// +----------------------------------------------------------------------// | VitPHP是一款免费开源软件,您可以访问http://www.vitphp.cn/以获得更多细节。// +----------------------------------------------------------------------namespace vitphp\vitlite;use think\App;use think\facade\Db;use think\facade\Route;use think\facade\View;use think\Service;use vitphp\vitlite\command\NodeRefresh;use vitphp\vitlite\middleware\SeoFetch;class AdminService extends Service{    protected $middlewares = [        // 全局请求缓存        // \think\middleware\CheckRequestCache::class,        // 多语言加载        // \think\middleware\LoadLangPack::class,        // Session初始化        \think\middleware\SessionInit::class    ];    public function register()    {        $subDomain = request()->subDomain();        $routing = Db::table('vit_routing')->where('domain', $subDomain)->find();        if ($routing) {            $s = $_GET['s'] ?? '';            if(Db::table('vit_settings')->where([                    'addons'=>'routing',                    'name'   =>'special',                    'value' =>$s                ])->find()){            }else if(count(array_filter(explode('/', $s))) < 3){                $s = parse_url($routing['url']);                $q = empty($s['query']) ? '' : $s['query'];                $p = empty($s['path']) ? '' : $s['path'];                $p = $p.($_GET['s'] ?? '');                if(substr($p,-5,5) === '.html'){                    $p = substr($p,0,-5);                }//                dump(strpos($p,'.'));                if(strpos($p,'.') === false){                    $p = implode('/', array_slice(explode('/', $p),-3));                }//                dump($p);                $s = '';                if ($routing['directory']) {                    $s = '/' . $routing['directory'];                }                if ($p) {                    $s .= '/' . $p;                }                $_GET['s'] = $s . ($_GET['s'] ?? '');                parse_str($q, $query_arr);                $_GET = array_merge($query_arr,$_GET);//                dump($_GET['s']);            }        }        $this->getSystem();        $this->jumpToMobileOrIndex();        // 注册命令        $this->commands([            NodeRefresh::class        ]);        foreach ($this->middlewares as $middleware){            $this->app->middleware->add($middleware);        }        // 注册容器        $this->app->bind(include __DIR__ . '/../extend/app/provider.php');        // 注册事件        $this->app->loadEvent(include  __DIR__ . '/../extend/app/event.php');        // 注册服务        $services = include __DIR__ . '/../extend/app/service.php';        foreach ($services as $service) {            $this->app->register($service);        }    }    /**     * 整理访问者的终端信息     */    protected function getSystem()    {        if (!defined('IS_MOBILE')) define('IS_MOBILE', $this->isMobile());        if (!defined('IS_WECHAT')) define('IS_WECHAT', $this->isWechat());        if (!defined('IS_IOS')) define('IS_IOS', $this->isIOS());        if (!defined('IS_ANDROID')) define('IS_ANDROID', $this->isAndroid());        $system = 1;        if(IS_ANDROID && IS_WECHAT){            $system = 2;        }else if(IS_ANDROID && !IS_WECHAT){            $system = 4;        }else if(IS_IOS && IS_WECHAT){            $system = 3;        }else if(IS_IOS && !IS_WECHAT){            $system = 5;        }        if (!defined('SYSTEM')) define('SYSTEM', $system);        View::assign([            'isMobile' => IS_MOBILE ? 1 : 0,            'isWechat' => IS_WECHAT ? 1 : 0,            'isIOS' => IS_IOS ? 1 : 0,            'isAndroid' => IS_ANDROID ? 1 : 0,            'system' => SYSTEM        ]);//        dump('安卓：' . (IS_ANDROID ? 'true' : 'false'));//        dump('IOS：' . (IS_IOS ? 'true' : 'false'));//        dump('手机：' . (IS_MOBILE ? 'true' : 'false'));//        dump('微信：' . (IS_WECHAT ? 'true' : 'false'));//        dump('系统标示：' . SYSTEM);    }    /**     * pc与手机互跳     */    protected function jumpToMobileOrIndex()    {        $rule = [            '/index/index' => '/mobile/index/index',            '/index/index/index' => '/mobile/index/index',            '/search/' => '/mobile/search/',            '/goods/' => '/mobile/goods/',            '/store/' => '/mobile/store/',            '/admin/index/index' => '/mobile/user/',            '/admin/order/index' => '/mobile/order/index',            '/news/' => '/mobile/news/',            '/cuxiao/quan' => '/mobile/cuxiao/quan',            '/promotion/reg' => '/mobile/promotion/reg',        ];        $baseUrl = $this->app->request->baseUrl();        $baseUrl = strtolower(rtrim($baseUrl, '.html'));        $newBaseUrl = '';        if(IS_MOBILE){            if($baseUrl === '/'){                $newBaseUrl = '/mobile';            }else if($baseUrl === '/index'){                $newBaseUrl = '/mobile';            }else{                foreach($rule as $rK => $rV){                    // 若在$baseUrl中开头能找到$rK，则将$rK替换成$rV                    if(strpos($baseUrl, $rK) === 0 ){                        $newBaseUrl = ltrim($baseUrl, $rK);                        $newBaseUrl = $rV . $newBaseUrl;                    }                }            }        }else{            foreach($rule as $rK => $rV){                if(strpos($baseUrl, $rV) === 0 ){                    $newBaseUrl = ltrim($baseUrl, $rV);                    $newBaseUrl = $rK . $newBaseUrl;                }            }        }        if($newBaseUrl){            $_GET['s'] = urldecode($newBaseUrl);        }    }    /**     * 判断是否为苹果     * @return bool     */    protected function isIOS()    {        if(strpos($_SERVER['HTTP_USER_AGENT'], 'iPhone')||strpos($_SERVER['HTTP_USER_AGENT'], 'iPad')){            return true;        }        return false;    }    /**     * 判断是否为安卓     * @return bool     */    protected function isAndroid()    {        if(strpos($_SERVER['HTTP_USER_AGENT'], 'Android')){            return true;        }        return false;    }    /**     * 判断当前是否是微信端     * @return bool     */    protected function isWechat()    {        if (strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false) {            return true;        }        return false;    }    /**     * 判断是否为手机端     * @return bool     */    protected function isMobile()    {        // 如果有HTTP_X_WAP_PROFILE则一定是移动设备        if (isset ($_SERVER['HTTP_X_WAP_PROFILE'])) {            return TRUE;        }        // 如果via信息含有wap则一定是移动设备,部分服务商会屏蔽该信息        if (isset ($_SERVER['HTTP_VIA'])) {            if (stristr($_SERVER['HTTP_VIA'], "wap")) return true;//            return stristr($_SERVER['HTTP_VIA'], "wap") ? TRUE : FALSE;// 找不到为flase,否则为TRUE        }        // 判断手机发送的客户端标志,兼容性有待提高        if (isset ($_SERVER['HTTP_USER_AGENT'])) {            $clientkeywords = array(                'mobile',                'nokia',                'sony',                'ericsson',                'mot',                'samsung',                'htc',                'sgh',                'lg',                'sharp',                'sie-',                'philips',                'panasonic',                'alcatel',                'lenovo',                'iphone',                'ipod',                'blackberry',                'meizu',                'android',                'netfront',                'symbian',                'ucweb',                'windowsce',                'palm',                'operamini',                'operamobi',                'openwave',                'nexusone',                'cldc',                'midp',                'wap'            );            // 从HTTP_USER_AGENT中查找手机浏览器的关键字            if (preg_match("/(" . implode('|', $clientkeywords) . ")/i", strtolower($_SERVER['HTTP_USER_AGENT']))) {                return TRUE;            }        }        if (isset ($_SERVER['HTTP_ACCEPT'])) { // 协议法，因为有可能不准确，放到最后判断            // 如果只支持wml并且不支持html那一定是移动设备            // 如果支持wml和html但是wml在html之前则是移动设备            if ((strpos($_SERVER['HTTP_ACCEPT'], 'vnd.wap.wml') !== FALSE) && (strpos($_SERVER['HTTP_ACCEPT'], 'text/html') === FALSE || (strpos($_SERVER['HTTP_ACCEPT'], 'vnd.wap.wml') < strpos($_SERVER['HTTP_ACCEPT'], 'text/html')))) {                return TRUE;            }        }        return FALSE;    }    public function boot()    {        $this->app->middleware->add(SeoFetch::class);    }}